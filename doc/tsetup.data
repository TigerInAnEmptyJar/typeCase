TSetup
tsetup.html
/users/data12/pion/ehrhardt/tofPack2/include/setup.h
CTSetup
108 TSetup
O#c2
Pmax
0 int
V100
=
Pcol
6 bool
Vfalse
=
DConstructor. Sets the maximum number of detectors and materials to be stored (default =100) and weather it is a collider or a fixed target experiment (default = false = fixed target). 
=
CTSetup
108 TSetup
O#c3
Ps
108 TSetup&
Sconst
=
DCopy constructor. 
=
gnumDets
0 int
O#v2
D
=
gdets
107 TDetector**
O#v3
D
=
gnumMats
0 int
O#v4
D
=
gmats
106 TMaterial**
O#v5
D
=
gtar
110 TTarget
O#v6
D
=
gcollider
6 bool
O#v7
D
=
gbeam1
109 TBeam
O#v8
=
gbeam2
109 TBeam
O#v9
=
gmaxDets
0 int
Sbeam2 const
O#v10
D
=
F~TSetup
-1 ~TSetup
O#f2
D
DDestructor
=
FgetDetector
107 TDetector
O#f3
Lconst
Pnum
0 int
=
DReturns the <var>num<sup>th</sup></var> detector of the setup. Returns an undefined detector if <var>num</var> is non-valid. 
=
FgetDetectorr
107 TDetector&
O#f4
Pnum
0 int
=
DReturns a reference to the <var>num<sup>th</sup></var> detector of the setup. Returns a reference to a "new" detector if <var>num</var> is non-valid, that has to be taken care of (possible memory leak). 
=
FaddDetector
7 void
O#f5
Pdet
107 TDetector&
Sconst
=
DAdds a detector to the list of detectors. Take care, that the detector structure <var>det</var> persists in memory since only a pointer and no copy of <var>det</var> is stored. Has to be deleted after use or handled equivalently. 
=
FpopDetector
7 void
O#f6
DRemoves the last detector from the setup. 
=
FgetNumberOfDetectors
0 int
O#f7
Lconst
DReturns the number of detectors defined for this setup. 
=
FgetNumberOfDetectorsr
0 int&
O#f8
DReturns a reference to the number of detectors defined for this setup. 
=
FgetMaxDetectors
0 int
O#f9
Lconst
DReturns the maximum number of detectors storable in this setup. 
=
FgetNumberOfBeams
0 int
O#f10
Lconst
DReturns the number of beams defined for this setup. 
=
FsetNumberOfBeams
7 void
O#f11
Pb
0 int
=
DSets the number of beams. 
=
FhasTarget
6 bool
O#f12
Lconst
DReturns true if a target and just one beam have been defined. 
=
FgetBeam
109 TBeam
O#f13
Lconst
Pnum
0 int
V0
=
DReturns the <var>num<sup>th</sup></var> beam on the setup. <var>num</var> is 0 by default. If it is 1 and a target is defined, or it is larger than 1, rubbish is returned.  
=
FgetBeamr
109 TBeam&
O#f14
Pnum
0 int
V0
=
DReturns a reference to the <var>num<sup>th</sup></var> beam on the setup. <var>num</var> is 0 by default. If it is 1 and a target is defined, or it is larger than 1, a reference to a "new" beam is returned, that has to be taken care of (possible memory leak).  
=
FsetBeam
7 void
O#f15
Pb
109 TBeam&
=
Pnum
0 int
V0
=
DSets the beam of the setup. The parameter <var>num</var> corresponds to the beam number. This can be 0 (default) or 1. It it is 1, the number of beams is set to 2 and the target is undefined. 
=
FgetTarget
110 TTarget
O#f16
Lconst
DReturns the target defined in the setup. Returns an undefined target, if no target is defined for the setup. 
=
FgetTargetr
110 TTarget&
O#f17
DReturns a reference to the target. Returns rubbish if no target is defined. 
=
FsetTarget
7 void
O#f18
Pt
110 TTarget&
=
DSets the target of the experiment. The number of beams is set to 1. 
=
FgetNumberOfMaterials
0 int
O#f19
Lconst
DReturns the number of materials defined for the setup. 
=
FgetMaterialr
106 TMaterial&
O#f20
Pnum
0 int
=
DReturns a reference to the <var>num<sup>th</sup></var> material defined for the setup. 
=
Foperator=
7 void
O#f21
Ps
108 TSetup&
Sconst
=
DCopy operator. 
=
S0 1 TBase
tbase.html
TBase
=
