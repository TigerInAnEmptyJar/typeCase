ShapeDisplay

$(KTOFPACK)/gui/parameter_widgets/include/shapedisplay.h
CShapeDisplay
-1 ShapeDisplay
O#c2
Pparent
-1 QWidget*
Thttp://doc.trolltech.com/4.4/qwidget.html
V0
=
Pname
5 char*
Sconst
V0
=
Pfl
-1 WFlags
V0
=
DConstructor. Qt3-version, non-visible in Qt4-mode.
=
CShapeDisplay
-1 ShapeDisplay
O#c3
Pparent
-1 QWidget*
Thttp://doc.trolltech.com/4.4/qwidget.html
V0
=
Pf
-1 Qt::WindowFlags
V0
=
DConstructor. Qt4-version, non-visible in Qt3-mode.
=
VnameLabel
-1 QLabel*
O#v2
D
=
VnameInput
-1 QWidget*
O#v3
Thttp://doc.trolltech.com/4.4/qwidget.html
Dline-edit for shape-name
=
VdescLabel
-1 QLabel*
O#v4
D
=
VdescriptionEdit
-1 QTextEdit*
O#v5
Thttp://doc.trolltech.com/4.4/qtextedit.html
Dtext-edit to provide description
=
VpropertyGroup
-1 QGroupBox*
O#v6
Dgroupbox for the property-widgets
=
VhelpGroup
-1 QGroupBox*
O#v7
D
=
VpropertyGroup
-1 QGridLayout*
O#v8
Dlayout for the property-widgets
=
VshapeShow
-1 QCanvasWidget*
O#v9
DCanvas to draw the shape if desired.
=
Vproperties
-1 vector<QWidget*>
O#v10
Dvector with widgets holding the different properties of the current shape_parameter, like <a href="point3d.html">point3D</a>, <a href="vector3d.html">vector3D</a>, int, float or string.
=
vsp
129 shape_parameter*
O#v11
Tshapeparameter.html
Dpointer to the variable of the current shape_parameter
=
vdrawer
-1 base_shape*
O#v12
Tbaseshape.html
Dpointer to the drawn base_shape has to be kept while drawn in the canvas to be deleted afterwards.
=
vReadOnly
6 bool
O#v13
Dread-only-property. if true, the variable, the current pointer points to won't be modified if the properties in the display change
=
vIsConstant
6 bool
O#v14
Dobsolete
=
vcopy
129 shape_parameter
O#v15
Tshapeparameter.html
Dcopy of the current shape_parameter
=
vfraction
1 float
O#v16
Dfraction of widget width, the canvas shall hold
=
vDrawShape
6 bool
O#v17
Dproperty holding wether the canvas for drawing the shape is visible.
=
FclassName
5 char*
Svirtual const
O#f2
DThe className() function that returns the class name as a string at runtime, 
Dwithout requiring native runtime type information (RTTI) support through the C++ compiler.
=
Finherrits
6 bool
Sconst
O#f3
Pclname
5 char*
Sconst
=
Dthe inherits() function that returns whether an object is an instance of a class 
Dthat inherits a specified class within the QObject inheritance tree. 
=
Ftr
-1 QString
Sstatic
O#f4
Thttp://doc.trolltech.com/4.4/qstring.html
PsourceText
5 char*
Sconst
=
Pcomment
5 char*
Sconst
=
DReturns a translated version of sourceText, or sourceText itself if there is no 
Dappropriate translated version. The translation context is QObject with comment 
D(0 by default). All QObject subclasses using the Q_OBJECT macro automatically have 
Da reimplementation of this function with the subclass name as context.
DWarning: This method is reentrant only if all translators are installed before calling 
Dthis method. Installing or removing translators while performing translations is not 
Dsupported. Doing so will probably result in crashes or other undesirable behavior. 
=
FtrUtf8
-1 QString
Sstatic
O#f5
Thttp://doc.trolltech.com/4.4/qstring.html
PsourceText
5 char*
Sconst
=
Pcomment
5 char*
Sconst
=
DReturns a translated version of sourceText, or QString::fromUtf8(sourceText) if there 
Dis no appropriate version. It is otherwise identical to tr(sourceText, comment). 
DWarning: This method is reentrant only if all translators are installed before calling 
Dthis method. Installing or removing translators while performing translations is not 
Dsupported. Doing so will probably result in crashes or other undesirable behavior. 
=
FsetProperty
6 bool
Svirtual
O#f6
Pname
5 char*
Sconst
=
Pvalue
-1 QVariant&
Sconst
=
DSets the value of the object's name property to value.
DReturns TRUE if the operation was successful; otherwise returns FALSE. 
DInformation about all available properties is provided through the metaObject()
=
Fproperty
-1 QVariant
Svirtual
O#f7
Lconst
Pname
5 char*
Sconst
=
DReturns the value of the object's name property. 
DIf no such property exists, the returned variant is invalid. 
DInformation about all available properties are provided through the metaObject(). 
=
FmetaObject
-1 QMetaObject*
Svirtual
O#f8
Lconst
DReturns a pointer to the meta object of this object. 
DA meta object contains information about a class that inherits QObject, e.g. class name,
Dsuperclass name, properties, signals and slots. Every class that contains the 
DQ_OBJECT macro will also have a meta object. 
DThe meta object information is required by the signal/slot connection mechanism 
Dand the property system. The functions isA() and inherits() also make use of the meta object. 
=
FreadOnly
6 bool
Svirtual
O#f9
DReturns the read-only-property. If it is true, the variable, the current pointer points to won't be modified if the properties in the display change.
=
FisConstant
6 bool
Svirtual
O#f10
Dobsolete.
=
FdoDraw
6 bool
Svirtual
O#f11
DReturns true, if the canvas to draw the shape shall be visible.
=
faddItemToLayout
7 void
O#f12
Ptp
0 int
=
Pname
-1 string
=
PwidgetName
-1 string
=
DAdds an item of type <var>tp</var> (point3D, vector3D, int, float, string) with some parameter-name and a widget-name to the property-layout.
=
gpointOnCanvas
14 point2D
O#f13
Tpoint2d.html
Pp
-1 QPoint&
Sconst
=
DTransforms a point of the Qt-widget canvas frame (pixels) to the root-canvas-frame (floats).
=
ginit
7 void
O#f14
DCalled by constructor.
=
gdestroy
7 void
O#f15
DCalled by destructor.
=
Lresize
7 void
Svirtual
O#l2
Ps
-1 QSize&
Sconst
=
DResize widget.
=
LresizeEvent
7 void
Svirtual
O#l3
Pe
-1 QResizeEvent*
=
Dresize-event.
=
Lresize
7 void
Svirtual
O#l4
Pw
0 int
=
Ph
0 int
=
DResize widget.
=
LsetShape
7 void
Svirtual
O#l5
PshapeIn
129 shape_parameter&
Tshapeparameter.html
=
DSets the shape_parameter to display. Take care that the variable is at least as long valid as the display-widget, because the widget keeps a pointer (to modify if not read-only) for it may want to reread the properties from the variable.
=
LOnShapeDraw
7 void
Svirtual
O#l6
DDraws the shape to canvas, if a shape of that type is defined in the typeCase analysis-package and if the drawing has been enabled.
=
LsetReadOnly
7 void
Svirtual
O#l7
Pvalue
6 bool
=
DSets the read-only-property. If it is true, the variable, the current pointer points to won't be modified if the properties in the display change.
=
LsetConstant
7 void
Svirtual
O#l8
Pvalue
6 bool
=
Dobsolete
=
LonPropertyChange
7 void
Svirtual
O#l9
DRereads the properties of the shape_parameter from the current shape_parameter-pointer.
=
LsetDraw
7 void
Svirtual
O#l10
Pvalue
6 bool
=
DSets wether the shape should be drawn, if possible. If it is false, the canvas will not be visible.
=
LsetFraction
7 void
Svirtual
O#l11
Pf
1 float
=
DSets the fraction of the widgets width the canvas occupies (if it is visible).
=
LmouseOnCanvas
7 void
Svirtual
O#l12
Pp
-1 QPoint&
Sconst
=
DObsolete
=
llanguageChange
7 void
Svirtual
O#l13
DSets the label-texts.
=
Nchanged
7 void
O#s2
DThis signal is emitted in non read-only-mode, when one of the properties of the shape_parameter in the display was changed.
=
DThis widget displays the properties of a single <a href="shapeparameter.html">shape_parameter</a>. If the shape has been defined already in the typeCase analysis package, it will be drawn to canvas for visualisation.
S0 0 QWidget

=
