momentum4D
momentum4d.html
/users/data12/pion/ehrhardt/tofPack2/include/geometry.h
Cmomentum4D
20 momentum4D
O#c2
DDefault constructor.
=
Cmomentum4D
20 momentum4D
O#c3
Pp
18 point4D&
Sconst
Tpoint4d.html
=
DCopy constructor. Interpret the first 3 values of <var>p</var> as momentum components and <var>p[3]</var> as energy.
=
Cmomentum4D
20 momentum4D
O#c4
Pv
19 vector4D&
Sconst
Tvector4d.html
=
DCopy constructor. Interpret the first 3 values of <var>v</var> as momentum components and <var>v[3]</var> as energy.
=
Cmomentum4D
20 momentum4D
O#c5
Pm
20 momentum4D&
Sconst
Tmomentum4d.html
=
DCopy constructor.
=
Cmomentum4D
20 momentum4D
O#c6
Pp
16 point3D&
Sconst
Tpoint3d.html
=
Penergy
3 double
=
DConstructor. Set the momentum in 3D-space and the energy of the particle.
=
Cmomentum4D
20 momentum4D
O#c7
Px
3 double
=
Py
3 double
=
Pz
3 double
=
Pe
3 double
=
DConstructor. Set the cartesic momentum components and the energy of the particle.
=
vvelocity
17 vector3D
O#v2
Tvector3d.html
DVelocity vector of the particle.
=
vmass
3 double
O#v3
DMass of the particle.
=
vgamma
3 double
O#v4
DGamma value of the particle this is 1/sqrt(1-beta²).
=
FsetPM
7 void
O#f2
Pp
17 vector3D&
Sconst
Tvector3d.html
=
Pm
3 double
=
DSets the particles properties. Vector is interpreted as momentum components, scalar as mass.
=
FsetVM
7 void
O#f3
Pv
17 vector3D&
Sconst
Tvector3d.html
=
Pm
3 double
=
DSets the particles properties. Vector is interpreted as velocity components, scalar as mass.
=
FsetVE
7 void
O#f4
Pv
17 vector3D&
Sconst
Tvector3d.html
=
Pe
3 double
=
DSets the particles properties. Vector is interpreted as velocity components, scalar as energy.
=
FsetPE
7 void
O#f5
Pp
17 vector3D&
Sconst
Tvector3d.html
=
Pe
3 double
=
DSets the particles properties. Vector is interpreted as momentum components, scalar as energy.
=
FEnergy
3 double
O#f6
Lconst
DReturn the energy of the particle.
=
FMass
3 double
O#f7
Lconst
DReturns the mass of the particle.
=
FBeta
3 double
O#f8
Lconst
DReturns the scalar velocity of the particle.
=
FGamma
3 double
O#f9
Lconst
DReturns the gamma value of the particle: 1/<sub>sqrt(1-beta²)</sub>.
=
FRapidity
3 double
O#f10
Lconst
DReturn the Rapidity of the particle along <var>axis</var>.
D1/2*ln(<sup>(e+p<sub>t</sub>)</sup> / <sub>(e-p<sub>t</sub>)</sub>)
=
FRapidity
3 double
O#f11
Lconst
Paxis
17 vector3D&
Sconst
Tvector3d.html
=
DReturn the Rapidity of the particle along <var>axis</var>.
D1/2*ln(<sup>(e+p<sub>t</sub>)</sup> / <sub>(e-p<sub>t</sub>)</sub>)
=
Fpx
3 double
O#f12
Lconst
DReturn the x-component of the momentum of the particle in cartesic coordinates.
=
Fpy
3 double
O#f13
Lconst
DReturn the y-component of the momentum of the particle in cartesic coordinates.
=
Fpz
3 double
O#f14
Lconst
DReturn the z-component of the momentum of the particle in cartesic coordinates.
=
Fe
3 double
O#f15
Lconst
DReturn the particles energy.
=
FPx
3 double
O#f16
Lconst
DReturn the x-component of the momentum of the particle in cartesic coordinates.
=
FPy
3 double
O#f17
Lconst
DReturn the y-component of the momentum of the particle in cartesic coordinates.
=
FPz
3 double
O#f18
Lconst
DReturn the z-component of the momentum of the particle in cartesic coordinates.
=
FE
3 double
O#f19
Lconst
DReturn the particles energy.
=
FPt
3 double
O#f20
Lconst
DReturn the transverse momentum of the particle perpendicular to z-axis.
=
FPt
3 double
O#f21
Lconst
Paxis
17 vector3D&
Sconst
Tvector3d.html
=
DReturn the transverse momentum of the particle perpendicular to <var>axis</var>.
=
FPt_v
17 vector3D
O#f22
Tvector3d.html
Lconst
Paxis
17 vector3D&
Sconst
Tvector3d.html
Vvector3D(0,0,1)
=
DReturn the transverse momentum-vector perpendicular to <var>axis</var>.
=
FPl
3 double
O#f23
Lconst
DReturn the longitudinal momentum of the particle along z-axis.
=
FPl
3 double
O#f24
Lconst
Paxis
17 vector3D&
Sconst
Tvector3d.html
=
DReturn the longitudinal momentum of the particle along <var>axis</var>.
=
FPl_v
17 vector3D
O#f25
Tvector3d.html
Lconst
Paxis
17 vector3D&
Sconst
Tvector3d.html
Vvector3D(0,0,1)
=
DReturn the longitudinal momentum-vector of the particle along <var>axis</var>.
=
Fpt
3 double
O#f26
Lconst
DReturn the transverse momentum of the particle perpendicular to z-axis.
=
Fpt
3 double
O#f27
Lconst
Paxis
17 vector3D&
Sconst
Tvector3d.html
=
DReturn the transverse momentum of the particle perpendicular to <var>axis</var>.
=
Fpt_v
17 vector3D
O#f28
Tvector3d.html
Lconst
Paxis
17 vector3D&
Sconst
Tvector3d.html
Vvector3D(0,0,1)
=
DReturn the transverse momentum-vector perpendicular to <var>axis</var>.
=
Fpl
3 double
O#f29
Lconst
DReturn the longitudinal momentum of the particle along z-axis.
=
Fpl
3 double
O#f30
Lconst
Paxis
17 vector3D&
Sconst
Tvector3d.html
=
DReturn the longitudinal momentum of the particle along <var>axis</var>.
=
Fpl_v
17 vector3D
O#f31
Tvector3d.html
Lconst
Paxis
17 vector3D&
Sconst
Tvector3d.html
Vvector3D(0,0,1)
=
DReturn the longitudinal momentum-vector of the particle along <var>axis</var>.
=
FVelocity
17 vector3D
O#f32
Tvector3d.html
Lconst
DReturn the velocity of the particle.
=
FMomentum
17 vector3D
O#f33
Tvector3d.html
Lconst
DReturn the momentum of the particle.
=
FDirection
17 vector3D
O#f34
Tvector3d.html
Lconst
DReturn the direction of the momentum of the particle.
=
Fboost
20 momentum4D
O#f35
Tmomentum4d.html
Lconst
Pbeta
17 vector3D&
Sconst
Tvector3d.html
=
DReturns a particle that is Lorentz-boosted by <var>beta</var>.
=
FCM
20 momentum4D
Sstatic
O#f36
Tmomentum4d.html
Pv1
20 momentum4D&
Sconst
Tmomentum4d.html
=
Pv2
20 momentum4D&
Sconst
Tmomentum4d.html
=
Pv3
20 momentum4D&
Sconst
Tmomentum4d.html
Vmomentum4D()
=
Pv4
20 momentum4D&
Sconst
Tmomentum4d.html
Vmomentum4D()
=
Pv5
20 momentum4D&
Sconst
Tmomentum4d.html
Vmomentum4D()
=
DStatic method to calculate the center of momentum for up to 5 particles.
=
Foperator==
0 int
O#f37
Lconst
Pv
20 momentum4D&
Sconst
Tmomentum4d.html
=
DComparison operator. Returns true if the difference between the particles is less than __prec (1e-6).
=
Foperator=
7 void
O#f38
Pv
20 momentum4D&
Sconst
Tmomentum4d.html
=
DCopy operator.
=
Foperator!
20 momentum4D
O#f39
Tmomentum4d.html
Lconst
DTransposes the vector and returns the result. A line vector returns a column vector, a column vector a line vector. This vector remains unchanged.
DInherrited from superclass.
=
Foperator+
20 momentum4D
O#f40
Tmomentum4d.html
Lconst
Pv
20 momentum4D&
Sconst
Tmomentum4d.html
=
DAddition operation. Returns the sum of this particle and <var>v</var>.
=
Foperator-
20 momentum4D
O#f41
Tmomentum4d.html
Lconst
Pv
20 momentum4D&
Sconst
Tmomentum4d.html
=
DSubtraction operator. Returns the difference between this particle and <var>v</var>.
=
Foperator*
3 double
O#f42
Lconst
Pv
20 momentum4D&
Sconst
Tmomentum4d.html
=
DMultiplication operator. Returns the scalar product of this particle and <var>v</var>. result = e*e<sub>v</sub>-(p*p<sub>v</sub>)
=
Foperator*
20 momentum4D
O#f43
Tmomentum4d.html
Lconst
Pfactor
3 double
=
DMultiplication operator. Returns a particle with <var>f</var> times the momentum and <var>f</var> times the energy of this particle.
=
Foperator[]
3 double
Svirtual
O#f44
Lconst
Ppos
0 int
=
DAccess operator. Returns the <var>pos<sup>th</sup></var> component in cartesic coordinates.
=
FtoString
-1 string
Svirtual
O#f45
Lconst
Ppt
0 int
V-1
=
DReturns a string representation of the particle.
D<var>pt</var> is 4*pt<sub>particle</sub>+pt<sub>3D</sub>.
Dpt_<sub>particle</sub> is here 
D<table>
D<hr><hd><hd>momentum<hd>veclocity</hr>
D<tr>energy<td>0<td>2</tr>
D<tr>mass<td>1<td>3</tr>
D</table>
Dpt<sub>3D</sub> can be eigther _cartesic3_, _cylindric_, _spheric_ or in the momentum's own representation (<var>pt</var>=-1, momentum-energy, default).
=
DThis class represents a 4D-momentum vector as used in physics. 
S0 1 vector4D
vector4d.html
vector4D
=
