sLine3D
sline2d.html
/users/data12/pion/ehrhardt/tofPack2/include/geometry.h
CsLine3D
21 sLine3D
O#c2
DDefault constructor.
=
CsLine3D
21 sLine3D
O#c3
Pp
16 point3D&
Sconst
Tpoint3d.html
=
Pq
16 point3D&
Sconst
Tpoint3d.html
=
DConstructor. Sets the footing point to <var>p</var> and the direction to <var>p-q</var>.
=
CsLine3D
21 sLine3D
O#c4
Pp
16 point3D&
Sconst
Tpoint3d.html
=
Pv
17 vector3D&
Sconst
Tvector3d.html
=
DConstructor. Sets the footing point and the direction of the line.
=
CsLine3D
21 sLine3D
O#c5
Pl
21 sLine3D&
Sconst
Tsline3d.html
=
DCopy constructor.
=
gfoot
16 point3D
O#v2
Tpoint3d.html
D
=
gd
17 vector3D
O#v3
Tvector3d.html
D
=
FFoot
16 point3D
O#f2
Tpoint3d.html
Lconst
DReturns the footing point of the line.
=
FDirection
17 vector3D
O#f3
Tvector3d.html
Lconst
DReturns the direction of the line.
=
FshiftFoot
7 void
O#f4
Pt
3 double
=
DShifts the footing point along the line: f<sub>new</sub> = f<sub>old</sub> + <var>t</var>*v
=
FnewLine
7 void
O#f5
Pp
16 point3D&
Sconst
Tpoint3d.html
=
Pv
17 vector3D&
Sconst
Tvector3d.html
=
DAssign new properties to the line.
=
FisIn
0 int
O#f6
Lconst
Pp
16 point3D&
Sconst
Tpoint3d.html
=
DReturns true if the distance of the point <var>p</var> to the line is smaller than __prec (1e-6).
=
FgetRep
-1 rep3D
O#f7
Lconst
DReturns the line's representation.
=
FsetRep
7 void
O#f8
Pr
-1 rep3D
=
DSet the representation of the line, this can be eigther _cartesic3_, _cylindric_ or _spheric_.
=
FisLine
0 int
O#f9
Lconst
DReturns true if the direction vector is a line vector.
=
FisColumn
0 int
O#f10
Lconst
DReturns true if the direction vector is a column vector.
=
Ftranspose
7 void
O#f11
DTransposes the direction vector. A line vector will lead to a column vector, a column vector to a line vector.
=
FgetState
-1 geomState
O#f12
Lconst
DReturns the state of the geometrical object. This can be _regular_, _undefined_, _infinite_ or _zero_.
=
FgetDimension
0 int
O#f13
Lconst
DReturns the line's dimension which is 3.
=
FZero
7 void
O#f14
DSets the state of the object to _zero_.
=
Foperator-
17 vector3D
O#f15
Tvector3d.html
Lconst
Pp
16 point3D&
Sconst
Tpoint3d.html
=
DReturns the distance vector of <var>p</var> to this line. Vector points to line.
=
Foperator&&
16 point3D
O#f16
Tpoint3d.html
Lconst
Pl
21 sLine3D&
Sconst
Tsline3d.html
=
DReturns the intersection point of this line with <<var>l</var>, if it exists.
=
Foperator&
3 double
O#f17
Lconst
Pl
21 sLine3D&
Sconst
Tsline3d.html
=
DReturns the minimal distance between this line and <var>l</var>.
=
Foperator-
22 lLine3D
O#f18
Tlline3d.html
Lconst
Pl
21 sLine3D&
Sconst
Tsline3d.html
=
DReturns the line of closest approach between this line and <var>l</var>. The first end point will lie on this line the second one on <var>l</var>.
=
Foperator-
22 lLine3D
O#f19
Tlline3d.html
Lconst
Pl
22 lLine3D&
Sconst
Tlline3d.html
=
DReturns the line of closest approach between this line and <var>l</var>. The first end point will lie on this line the second one on <var>l</var>.
=
Foperator=
7 void
O#f20
Pl
21 sLine3D&
Sconst
Tsline3d.html
=
DCopy operator.
=
FtoString
-1 string
Svirtual
O#f21
Lconst
Ppt
0 int
V-1
=
DReturns a string representation of the line. Depending on <var>pt</var> this can be eigther _cartesic3_, _cylindric_, _spheric_ or in the lines own representation (<var>pt</var>=-1, default). There are two representations possible: one for the vector and one for the point: <var>pt</var>=4*p<sub>point</sub>+p<sub>vector</sub>.
=
fInfinite
7 void
O#f22
DSets the state of the object to _infinite_.
=
fUndefined
7 void
O#f23
DSets the state of the object to _undefined_. 
=
fRegular
7 void
O#f24
DSets the state of the object to _regular_. 
=
DThis class describes a straight line in 3 dimensional space.
S0 1 geomObject
geomobj.html
geomObject
=
