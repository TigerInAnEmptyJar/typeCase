base_shape
baseshape.html
/users/data12/pion/ehrhardt/tofPack2/include/baseShape.h
Cbase_shape
-1 base_shape
O#c2
Pn
-1 QString
=
DConstructor. Sets the name of the shape.  
=
Cbase_shape
-1 base_shape
O#c3
Ps
-1 base_shape&
Sconst
=
DCopy constructor.  
=
vcenter
16 point3D
O#v2
D center point of the base-shape
=
FgetName
-1 QString
O#f2
Lconst
DReturns the name of the shape.   
=
FgetCenter
16 point3D
O#f3
Lconst
DReturns the center point of the shape.   
=
FsetCenter
7 void
O#f4
Pc
16 point3D
=
DSets the center point of the shape.    
=
Fentrance
16 point3D
Svirtual
O#f5
Pline
21 sLine3D&
Sconst
=
DReturns the entrance point of the straight line into the shape. This point is undefined if the line does not hit the shape.    
=
Fdistance
17 vector3D
Svirtual
O#f6
Pline
21 sLine3D&
Sconst
=
DReturns the distance vector from the straight line to the shape.    
=
FNormal
21 sLine3D
Svirtual
O#f7
Pline
21 sLine3D&
Sconst
=
DReturns the hit point of a straigt line with the shape and normal vector of the shape in that point. This is stored in the straight line return value with the Foot-property being the hit point and the Direction-property the normal vector.    
=
Fcut
6 bool
Svirtual
O#f8
Pf
-1 fiber&
Sconst
=
DReturns true, if the shape and the fiber occupy some space commonly.    
=
FHitParams
13 Vector
Svirtual
O#f9
Pline
21 sLine3D&
Sconst
=
DReturns the parameters for a hit of a straight line with the shape. The pattern will be:    
D<table>   
D<tr><th>index of return<th>idescription    
D<tr><td>0<td>sigma value    
D<tr><td>1,2,3<td>entrance point of line/point on line closest to the volume    
D<tr><td>4,5,6<td>resolution vector    
D<tr><td>7,8,9<td>point on volume closest to the line    
D<tr><td>10,11,12<td>minimum distance of line to volume, points to volume    
D</table>    
=
FDraw
7 void
Svirtual
O#f10
Lconst
Peye
16 point3D&
Sconst
=
Pplane
23 plane3D&
Sconst
=
PboundingBox
19 vector4D*
=
PlColor
0 int
=
PfColor
0 int
V8
=
PfStyle
0 int
V1001
=
DThis function is used for drawing a shape to a root-TCanvas. 
DIt will draw a projection of the 3D shape from the <var>eye</var>-point to a <var>plane</var>. The corners of the drawn shape in canvas coordinates are stored in <var>boundingBox</var>.  
D<br>It is drawn using <var>lColor</var> as line color, <var>fColor</var> as fill color and <var>fStyle</var> as fill style. See <a href="http://root.cern.ch/root/html/TAttFill.html"> root-colors and -styles</a>.     
=
FDraw
7 void
Svirtual
O#f11
Lconst
Peye
16 point3D&
Sconst
Vpoint3D(0,0,0)
=
Pplane
23 plane3D&
Sconst
Vplane3D(point3D(0,0,1),vector3D(0,0,1))
=
PboundingBox
19 vector4D*
VNULL
=
Pident
-1 TObject**
VNULL
=
PlColor
0 int
V1
=
PfColor
0 int
V8
=
PfStyle
0 int
V1001
=
DThis function is used for drawing a shape to a root-TCanvas.     
DIt will draw a projection of the 3D shape from the <var>eye</var>-point to a <var>plane</var>. The corners of the drawn shape in canvas coordinates are stored in <var>boundingBox</var>.     
D<br>It is drawn using <var>lColor</var> as line color, <var>fColor</var> as fill color and <var>fStyle</var> as fill style. See <a href="http://root.cern.ch/root/html/TAttFill.html"> root-colors and -styles</a>.     
D<br>The parameter <var>ident</var> will return a pointer to the drawn root-primitive to provide the distance-to-primitive functionality.    
=
S0 1 base_parameter
baseparameter.html
base_parameter
=
