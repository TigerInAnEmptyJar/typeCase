plane3D
plane3d.html
/users/data12/pion/ehrhardt/tofPack2/include/geometry.h
Cplane3D
23 plane3D
O#c2
DDefault constructor.
=
Cplane3D
23 plane3D
O#c3
Pp
23 plane3D&
Sconst
Tplane3d.html
=
DCopy constructor.
=
Cplane3D
23 plane3D
O#c4
Pa
16 point3D&
Sconst
Tpoint3d.html
=
Pb
16 point3D&
Sconst
Tpoint3d.html
=
Pc
16 point3D&
Sconst
Tpoint3d.html
=
DConstructor. Sets the footing point to <var>a</var>, the two directions are calculated from <var>a</var> to <var>b</var> or <var>c</var> respectively.
=
Cplane3D
23 plane3D
O#c5
Pfoot
16 point3D&
Sconst
Tpoint3d.html
=
Pdir1
17 vector3D&
Sconst
Tvector3d.html
=
Pdir2
17 vector3D&
Sconst
Tvector3d.html
=
DConstructor. Sets the footing point and the two directions making up the plane. Take care that the angle between both directions is not too small.
=
Cplane3D
23 plane3D
O#c6
Pfoot
16 point3D&
Sconst
Tpoint3d.html
=
Pnorm
17 vector3D&
Sconst
Tvector3d.html
=
DConstructor. Set the footing point and the normal vector.
=
vpr
-1 planeRep
O#v2
DRepresentation of the plane: _normal_ or _parametric_.
=
gf
16 point3D
O#v3
Tpoint3d.html
D
=
gdir1
17 vector3D
O#v4
Tvector3d.html
D
=
gdir2
17 vector3D
O#v5
Tvector3d.html
D
=
gn_
17 vector3D
O#v6
Tvector3d.html
D
=
FFoot
16 point3D
O#f2
Tpoint3d.html
Lconst
DReturns the footing point.
=
FDirection
17 vector3D
O#f3
Tvector3d.html
Lconst
Pi
0 int
=
DReturns the <var>i<sup>th</sup></var> direction of the plane.
=
FNormal
17 vector3D
O#f4
Tvector3d.html
Lconst
DReturns the normal vector of the plane.
=
Foperator=
7 void
O#f5
Pp
23 plane3D&
Sconst
Tplane3d.html
=
DCopy operator.
=
Foperator==
0 int
O#f6
Lconst
Pp
23 plane3D&
Sconst
Tplane3d.html
=
DComparison operator. Returns true if the difference between <var>p</var>'s footing point and this plane is less than __prec (1e-6).
=
FgetState
-1 geomState
O#f7
Lconst
DReturns the state of the geometrical object. This can be _regular_, _undefined_, _infinite_ or _zero_.
=
FZero
7 void
O#f8
DSets the state of the object to _zero_. 
=
FgetRep
-1 rep3D
O#f9
Lconst
DReturn the representation of plane's directions.
=
FsetRep
7 void
O#f10
Pr
-1 rep3D
=
DSet the representation of the plane's directions to eigther _cartesic3_, _spheric_ or _cylindric_.
=
FgetPlaneRep
-1 planeRep
O#f11
Lconst
DReturns the planes representation.
=
FsetPlaneRep
7 void
O#f12
Pr
-1 planeRep
=
DSet the planes representation to eigther _normal_ or _parametric_.
=
FsetPlane
7 void
O#f13
Pfoot
16 point3D&
Sconst
Tpoint3d.html
=
Pdir1
17 vector3D&
Sconst
Tvector3d.html
=
Pdir2
17 vector3D&
Sconst
Tvector3d.html
=
DSet the plane's footing point to <var>foot</var>, and its directions. Take care that the angle between both directions is sufficiently large.
=
Foperator&
17 vector3D
O#f14
Tvector3d.html
Lconst
Pp
16 point3D&
Sconst
Tpoint3d.html
=
DReturns the distance of point <var>p</var> to this plane. Vector points to plane.
=
Foperator-
16 point3D
O#f15
Tpoint3d.html
Lconst
Pl
21 sLine3D&
Sconst
Tsline3d.html
=
DReturns the intersection point of this plane with line <var>l</var>, if it exists.
=
Foperator-
16 point3D
O#f16
Tpoint3d.html
Lconst
Pl
22 lLine3D&
Sconst
Tlline3d.html
=
DReturns the intersection point of this plane with line <var>l</var>, if it exists.
=
Foperator-
21 sLine3D
O#f17
Tsline3d.html
Lconst
Pp
23 plane3D&
Sconst
Tplane3d.html
=
DReturns the intersection line of plane <var>p</var> with this plane.
=
FtoString
-1 string
Svirtual
O#f18
Lconst
Ppt
0 int
V-1
=
DReturns a string representation of the plane dependent on <var>pt</var> = 16*p<sub>plane</sub> + 4*p<sub>vector</sub> + p<sub>foot</sub>
=
fInfinite
7 void
O#f19
DSets the state of the object to _infinite_.
=
fUndefined
7 void
O#f20
DSets the state of the object to _undefined_. 
=
fRegular
7 void
O#f21
DSets the state of the object to _regular_. 
=
DThis is a plane in 3-dimensional space.
S0 1 geomObject
geomobj.html
geomObject
=
