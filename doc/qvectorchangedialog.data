QVectorChangeDialog
qvectorchangedialog.html
/users/data12/pion/ehrhardt/tofPack2/gui/widgets/include/qvectorchangedialog.h
CQVectorChangeDialog
-1 QVectorChangeDialog
O#c2
Pparent
-1 QWidget*
V0
=
Pname
5 char*
Sconst
V0
=
Pmodal
6 bool
VFALSE
=
Pfl
-1 WFlags
V0
=
DConstructor, Qt3-mode, non-visible in Qt4-mode
=
CQVectorChangeDialog
-1 QVectorChangeDialog
O#c3
Pparent
-1 QWidget*
V0
=
Pf
-1 Qt::WindowFlags
V0
=
DConstructor, Qt4-mode, non-visible in Qt3-mode
=
VlistBox
-1 QListBox*
O#v2
Dshows the content of the vector, for Qt4-mode, non-visible in Qt3-mode
=
VlistBox
-1 QListWidget*
O#v3
D
=
V< 0x040000 QPushButton* buttonHelp
-1 QT_VERSION
S#if
O#v4
Dhelp-button for Qt3-mode, non-visible in Qt4-mode
=
VbuttonOk
-1 QPushButton*
O#v5
Dok-button for Qt3-mode, non-visible in Qt4-mode
=
VbuttonCancel
-1 QPushButton*
O#v6
Dcancel-button for Qt3-mode, non-visible in Qt4-mode
=
Vbuttons
-1 QDialogButtonBox*
O#v7
Ddialog-buttons for Qt4-mode, non-visible in Qt3-mode
=
vlayout
-1 QGridLayout*
O#v8
Dlayout
=
vHorizontal_Spacing2
-1 QSpacerItem*
O#v9
Dlayout-item
=
FclassName
5 char*
Svirtual const
O#f2
DThe className() function that returns the class name as a string at runtime, 
Dwithout requiring native runtime type information (RTTI) support through the C++ compiler.
=
Finherrits
6 bool
Sconst
O#f3
Pclname
5 char*
Sconst
=
Dthe inherits() function that returns whether an object is an instance of a class 
Dthat inherits a specified class within the QObject inheritance tree. 
=
Ftr
-1 QString
Sstatic
O#f4
PsourceText
5 char*
Sconst
=
Pcomment
5 char*
Sconst
=
DReturns a translated version of sourceText, or sourceText itself if there is no 
Dappropriate translated version. The translation context is QObject with comment 
D(0 by default). All QObject subclasses using the Q_OBJECT macro automatically have 
Da reimplementation of this function with the subclass name as context.
DWarning: This method is reentrant only if all translators are installed before calling 
Dthis method. Installing or removing translators while performing translations is not 
Dsupported. Doing so will probably result in crashes or other undesirable behavior. 
=
FtrUtf8
-1 QString
Sstatic
O#f5
PsourceText
5 char*
Sconst
=
Pcomment
5 char*
Sconst
=
DReturns a translated version of sourceText, or QString::fromUtf8(sourceText) if there 
Dis no appropriate version. It is otherwise identical to tr(sourceText, comment). 
DWarning: This method is reentrant only if all translators are installed before calling 
Dthis method. Installing or removing translators while performing translations is not 
Dsupported. Doing so will probably result in crashes or other undesirable behavior. 
=
FsetProperty
6 bool
Svirtual
O#f6
Pname
5 char*
Sconst
=
Pvalue
-1 QVariant&
Sconst
=
DSets the value of the object's name property to value.
DReturns TRUE if the operation was successful; otherwise returns FALSE. 
DInformation about all available properties is provided through the metaObject()
=
Fproperty
-1 QVariant
Svirtual
O#f7
Lconst
Pname
5 char*
Sconst
=
DReturns the value of the object's name property. 
DIf no such property exists, the returned variant is invalid. 
DInformation about all available properties are provided through the metaObject(). 
=
FmetaObject
-1 QMetaObject*
Svirtual
O#f8
Lconst
DReturns a pointer to the meta object of this object. 
DA meta object contains information about a class that inherits QObject, e.g. class name,
Dsuperclass name, properties, signals and slots. Every class that contains the 
DQ_OBJECT macro will also have a meta object. 
DThe meta object information is required by the signal/slot connection mechanism 
Dand the property system. The functions isA() and inherits() also make use of the meta object. 
=
FclassName
5 char*
Svirtual const
O#f9
DThe className() function that returns the class name as a string at runtime, 
Dwithout requiring native runtime type information (RTTI) support through the C++ compiler.
=
Finherrits
6 bool
Sconst
O#f10
Pclname
5 char*
Sconst
=
Dthe inherits() function that returns whether an object is an instance of a class 
Dthat inherits a specified class within the QObject inheritance tree. 
=
Ftr
-1 QString
Sstatic
O#f11
PsourceText
5 char*
Sconst
=
Pcomment
5 char*
Sconst
=
DReturns a translated version of sourceText, or sourceText itself if there is no 
Dappropriate translated version. The translation context is QObject with comment 
D(0 by default). All QObject subclasses using the Q_OBJECT macro automatically have 
Da reimplementation of this function with the subclass name as context.
DWarning: This method is reentrant only if all translators are installed before calling 
Dthis method. Installing or removing translators while performing translations is not 
Dsupported. Doing so will probably result in crashes or other undesirable behavior. 
=
FtrUtf8
-1 QString
Sstatic
O#f12
PsourceText
5 char*
Sconst
=
Pcomment
5 char*
Sconst
=
DReturns a translated version of sourceText, or QString::fromUtf8(sourceText) if there 
Dis no appropriate version. It is otherwise identical to tr(sourceText, comment). 
DWarning: This method is reentrant only if all translators are installed before calling 
Dthis method. Installing or removing translators while performing translations is not 
Dsupported. Doing so will probably result in crashes or other undesirable behavior. 
=
FsetProperty
6 bool
Svirtual
O#f13
Pname
5 char*
Sconst
=
Pvalue
-1 QVariant&
Sconst
=
DSets the value of the object's name property to value.
DReturns TRUE if the operation was successful; otherwise returns FALSE. 
DInformation about all available properties is provided through the metaObject()
=
Fproperty
-1 QVariant
Svirtual
O#f14
Lconst
Pname
5 char*
Sconst
=
DReturns the value of the object's name property. 
DIf no such property exists, the returned variant is invalid. 
DInformation about all available properties are provided through the metaObject(). 
=
FmetaObject
-1 QMetaObject*
Svirtual
O#f15
Lconst
DReturns a pointer to the meta object of this object. 
DA meta object contains information about a class that inherits QObject, e.g. class name,
Dsuperclass name, properties, signals and slots. Every class that contains the 
DQ_OBJECT macro will also have a meta object. 
DThe meta object information is required by the signal/slot connection mechanism 
Dand the property system. The functions isA() and inherits() also make use of the meta object. 
=
FclassName
5 char*
Svirtual const
O#f16
DThe className() function that returns the class name as a string at runtime, 
Dwithout requiring native runtime type information (RTTI) support through the C++ compiler.
=
Finherrits
6 bool
Sconst
O#f17
Pclname
5 char*
Sconst
=
Dthe inherits() function that returns whether an object is an instance of a class 
Dthat inherits a specified class within the QObject inheritance tree. 
=
Ftr
-1 QString
Sstatic
O#f18
PsourceText
5 char*
Sconst
=
Pcomment
5 char*
Sconst
=
DReturns a translated version of sourceText, or sourceText itself if there is no 
Dappropriate translated version. The translation context is QObject with comment 
D(0 by default). All QObject subclasses using the Q_OBJECT macro automatically have 
Da reimplementation of this function with the subclass name as context.
DWarning: This method is reentrant only if all translators are installed before calling 
Dthis method. Installing or removing translators while performing translations is not 
Dsupported. Doing so will probably result in crashes or other undesirable behavior. 
=
FtrUtf8
-1 QString
Sstatic
O#f19
PsourceText
5 char*
Sconst
=
Pcomment
5 char*
Sconst
=
DReturns a translated version of sourceText, or QString::fromUtf8(sourceText) if there 
Dis no appropriate version. It is otherwise identical to tr(sourceText, comment). 
DWarning: This method is reentrant only if all translators are installed before calling 
Dthis method. Installing or removing translators while performing translations is not 
Dsupported. Doing so will probably result in crashes or other undesirable behavior. 
=
FsetProperty
6 bool
Svirtual
O#f20
Pname
5 char*
Sconst
=
Pvalue
-1 QVariant&
Sconst
=
DSets the value of the object's name property to value.
DReturns TRUE if the operation was successful; otherwise returns FALSE. 
DInformation about all available properties is provided through the metaObject()
=
Fproperty
-1 QVariant
Svirtual
O#f21
Lconst
Pname
5 char*
Sconst
=
DReturns the value of the object's name property. 
DIf no such property exists, the returned variant is invalid. 
DInformation about all available properties are provided through the metaObject(). 
=
FmetaObject
-1 QMetaObject*
Svirtual
O#f22
Lconst
DReturns a pointer to the meta object of this object. 
DA meta object contains information about a class that inherits QObject, e.g. class name,
Dsuperclass name, properties, signals and slots. Every class that contains the 
DQ_OBJECT macro will also have a meta object. 
DThe meta object information is required by the signal/slot connection mechanism 
Dand the property system. The functions isA() and inherits() also make use of the meta object. 
=
F~QVectorChangeDialog
-1 ~QVectorChangeDialog
O#f23
DDestructor
=
FgetVector
-1 vector<X>
Stemplate <class X>
O#f24
DAfter the execution of the dialog-box this method returns the modified vector.
=
FgetVector
-1 vector<X>
Stemplate <class X> static
O#f25
Ppar
-1 QWidget*
=
Pcap
-1 QString&
Sconst
=
Pbeg
-1 vector<X>&
Sconst
=
DStatic method. Initializes the dialog with <var>beg</var>, executes the dialog-box and returns the modified vector.
=
Lresize
7 void
Svirtual
O#l2
Pw
0 int
=
Ph
0 int
=
DResize widget. Obsolete since layout is used.
=
Lresize
7 void
Svirtual
O#l3
Ps
-1 QSize&
Sconst
=
DResize widget. Obsolete since layout is used.
=
LresizeEvent
7 void
Svirtual
O#l4
Pe
-1 QResizeEvent*
=
DResize-event. Obsolete since layout is used.
=
LsetVector
7 void
Svirtual
O#l5
Pvec
-1 vector<QString>&
Sconst
=
DSets the listBox. Each individual item of the vector is added as line. Use this method for QString vectors.
=
LsetVector
7 void
Svirtual
O#l6
Pvec
-1 vector<int>&
Sconst
=
DSets the listBox. Each individual item of the vector is added as line. Use this method for integer vectors.
=
LsetVector
7 void
Svirtual
O#l7
Pvec
-1 vector<float>&
Sconst
=
DSets the listBox. Each individual item of the vector is added as line. Use this method for floating-point vectors.
=
LsetVector
7 void
Svirtual
O#l8
Pvec
-1 vector<bool>&
Sconst
=
DSets the listBox. Each individual item of the vector is added as line. Use this method for boolean vectors.
=
LOnListBoxClick
7 void
Svirtual
O#l9
Pbutton
0 int
=
Pit
-1 QListBoxItem*
=
DOn a left click a new item is added to the listBox (using <a href="qstringinputdialog.html#f25"> QStringInputDialog</a>).
DOn a rght click the item <var>it</var> is removed.
DOn a mid-button-click, the item is replaced (using <a href="qstringinputdialog.html#f25"> QStringInputDialog</a>).
DFor Qt3-mode it is non-visible in Qt4-mode.
=
LOnListBoxClick
7 void
Svirtual
O#l10
DA new item is added to the listBox (using <a href="qstringinputdialog.html#f25"> QStringInputDialog</a>).
DFor Qt4-mode it is non-visible in Qt3-mode.
=
LOnListBoxClick
7 void
Svirtual
O#l11
Pp
-1 QPoint&
Sconst
=
DIf at <var>p</var> there is no item in the listBox, a new item is added (using <a href="qstringinputdialog.html#f25"> QStringInputDialog</a>), else the item is removed.
DFor Qt4-mode it is non-visible in Qt3-mode.
=
llanguageChange
7 void
Svirtual
O#l12
D
=
ninit
7 void
O#l13
D
=
ndestroy
7 void
O#l14
DDestructor routine.
=
DThis class is provided for convenience. It is a template class, non-trivial to do using Qt. It gets a std::vector and displays the individual items of the vector in a listBox/listWidget. On a right-click an item is deleted, on a left-click a new item can be inserted and on a mid-button-click an item is replaced.
S0 0 QDialog
http://doc.trolltech.com/4.4/qdialog.html
=
