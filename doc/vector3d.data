vector3D
vector3d.html
/users/data12/pion/ehrhardt/tofPack2/include/geometry.h
Cvector3D
17 vector3D
O#c2
DDefault constructor.
=
Cvector3D
17 vector3D
O#c3
Pp
12 point&
Sconst
Tpoint.html
=
DCopy constructor. Creates a point vector from the origin to point <var>p</var>. Works only if the dimension of <var>p</var> is 3.
=
Cvector3D
17 vector3D
O#c4
Pv
13 Vector&
Sconst
Tvector.html
=
DCopy constructor. Works only if the dimension of <var>v</var> is 3.
=
Cvector3D
17 vector3D
O#c5
Pp
16 point3D&
Sconst
Tpoint3d.html
=
DCopy constructor. Sets a point vector from the origin to point <var>p</var>.
=
Cvector3D
17 vector3D
O#c6
Pv
17 vector3D&
Sconst
Tvector3d.html
=
DCopy constructor.
=
Cvector3D
17 vector3D
O#c7
Px
3 double
=
Py
3 double
=
Pz
3 double
=
DConstructor. Sets the cartesic coordinates.
=
Cvector3D
17 vector3D
O#c8
Pm
20 momentum4D&
Sconst
Tmomentum4d.html
=
DCopy constructor. Takes the 3-momentum of the 4D-momentum vector (without the energy component).
=
FsetValues
7 void
Svirtual
O#f2
Px
3 double
=
Py
3 double
=
Pz
3 double
=
DSets the cartesic coordinates.
=
FgetValue
3 double
Svirtual
O#f3
Lconst
Ppos
0 int
=
DReturns the <var>pos<sup>th</sup></var> component in cartesic coordinates.
=
FsetValue
7 void
Svirtual
O#f4
Ppos
0 int
=
PvalueIn
3 double
=
DSet the <var>pos<sup>th</sup></var> component in cartesic coordinates to <var>valueIn</var>.
=
FgetState
-1 geomState
Svirtual
O#f5
Lconst
DReturns the state of the geometrical object. This can be _regular_, _undefined_, _infinite_ or _zero_. 
=
Fnormalize
7 void
Svirtual
O#f6
DSet the length of the vector to 1.
=
Flength
3 double
Svirtual
O#f7
Lconst
DReturn the length of the vector.
=
FgetDimension
0 int
Svirtual
O#f8
Lconst
DReturn the vectors dimension which is 3.
=
Foperator=
7 void
O#f9
Pp
12 point&
Sconst
Tpoint.html
=
DCopy operator. Sets a point vector from the origin to point <var>p</var>. Works only if the dimension of <var>p</var> is 3.
=
Foperator=
7 void
O#f10
Pv
13 Vector&
Sconst
Tvector.html
=
DCopy operator. Works only if the dimension of <var>v</var> is 3.
=
Foperator=
7 void
O#f11
Pp
16 point3D&
Sconst
Tpoint3d.html
=
DCopy operator. Sets a point vector from the origin to point <var>p</var>.
=
Foperator=
7 void
O#f12
Pv
17 vector3D&
Sconst
Tvector3d.html
=
DCopy operator.
=
Foperator+
17 vector3D
O#f13
Tvector3d.html
Lconst
Pw
17 vector3D&
Sconst
Tvector3d.html
=
DAddition operation. Returns the sum of this vector and <var>w</var>.
=
Foperator-
17 vector3D
O#f14
Tvector3d.html
Lconst
Pw
17 vector3D&
Sconst
Tvector3d.html
=
DSubtraction operator. Returns the difference vector between this vector and <var>w</var>.
=
Foperator*
3 double
O#f15
Lconst
Pw
17 vector3D&
Sconst
Tvector3d.html
=
DMultiplication operator. Returns the scalar product of this vector and <var>w</var>.
=
Foperator^
17 vector3D
O#f16
Tvector3d.html
Lconst
Pw
17 vector3D&
Sconst
Tvector3d.html
=
DReturns the cross-product of (this x <var>w</var>).
=
Foperator*
17 vector3D
O#f17
Tvector3d.html
Lconst
Pf
3 double
=
DMultiplication operator. Returns a vector with <var>f</var> times the length of this vector.
=
Foperator/
17 vector3D
O#f18
Tvector3d.html
Lconst
Pf
3 double
=
DDivision operator. Divides each component in cartesic coordinates by f and returns the result. This vector remains unchanged.
=
Foperator==
0 int
O#f19
Lconst
Pv
17 vector3D&
Sconst
Tvector3d.html
=
DComparison operator. Returns true if the difference between the vectors is less than __prec (1e-6).
=
Foperator[]
3 double
Svirtual
O#f20
Lconst
Ppos
0 int
=
DAccess operator. Returns the <var>pos<sup>th</sup></var> component in cartesic coordinates.
=
Foperator!
17 vector3D
O#f21
Tvector3d.html
Lconst
DTransposes the vector and returns the result. A line vector returns a column vector, a column vector a line vector. This vector remains unchanged.
=
Fangle
3 double
O#f22
Lconst
Pv
17 vector3D&
Sconst
Tvector3d.html
=
Pw
17 vector3D&
Sconst
Tvector3d.html
=
DReturns a signed angle between the vectors <var>v</var> and <var>w</var>. This vector acts as sign defining axis. If the cross-product (v x w)*this is negative, so is the sign of the result.
=
FtoString
-1 string
Svirtual
O#f23
Lconst
Ppt
0 int
V-1
=
DReturns a string representation of the point. Depending on <var>pt</var> this can be eigther _cartesic3_, _cylindric_, _spheric_ or in the points own representation (<var>pt</var>=-1, default).
=
fZero
7 void
Svirtual
O#f24
DSets the state of the objet to _zero_. 
=
fInfinite
7 void
Svirtual
O#f25
DSets the state of the objet to _infinite_. 
=
fUndefined
7 void
Svirtual
O#f26
DSets the state of the objet to _undefined_. 
=
fRegular
7 void
Svirtual
O#f27
DSets the state of the objet to _regular_. 
=
DVector in 3-dimensional space.
S0 1 point3D
point3d.html
point3D
S0 1 Vector
vector.html
Vector
=
