point4D
point4d.html
/users/data12/pion/ehrhardt/tofPack2/include/geometry.h
Cpoint4D
18 point4D
O#c2
DDefault constructor.
=
Cpoint4D
18 point4D
O#c3
Pp
16 point3D&
Sconst
Tpoint3d.html
=
Pw
3 double
=
DCopy constructor. Sets the 3D-part <var>p</var> and the <var>w</var>-component.
=
Cpoint4D
18 point4D
O#c4
Pp
18 point4D&
Sconst
Tpoint4d.html
=
DCopy constructor.
=
Cpoint4D
18 point4D
O#c5
Pp
12 point&
Sconst
Tpoint.html
=
DCopy constructor. Works only if <var>p</var> is 4-dimensional.
=
Cpoint4D
18 point4D
O#c6
Pp
12 point&
Sconst
Tpoint.html
=
Pw
3 double
=
DCopy constructor. Works only if <var>p</var> is 3-dimensional. Sets the 3D-part <var>p</var>, and the <var>w</var>-component.
=
Cpoint4D
18 point4D
O#c7
Px
3 double
=
Py
3 double
=
Pz
3 double
=
Pw
3 double
=
DConstructor. Sets the cartesic components.
=
vf_r
3 double
O#v2
Dr-component of the 3D-part in spheric coordinates, distance to the origin
=
vf_rho
3 double
O#v3
Drho-component of the 3D-part in cylindric coordinates, length of the point vector projected on the x-y-plane
=
vf_phi
3 double
O#v4
Dphi-component in eigther polar or spheric coordinates of the 3D-part, angle of the point vector projected to x-y-plane to the x-axis
=
vf_theta
3 double
O#v5
Dtheta-component of the 3D part in spheric coordinates, angle of the point vector to the z-axis
=
vvalue1
3 double
O#v6
Dx-component in cartesic coordinates.
=
vvalue2
3 double
O#v7
Dy-component in cartesic coordinates.
=
vvalue3
3 double
O#v8
Dz-component in cartesic coordinates.
=
vvalue4
3 double
O#v9
Dt-component in cartesic coordinates.
=
grepre
-1 rep3D
O#v10
D
=
FsetValues
7 void
Svirtual
O#f2
Px
3 double
=
Py
3 double
=
Pz
3 double
=
Pw
3 double
=
DSet the cartesic coordinates.
=
FsetValues
7 void
Svirtual
O#f3
Px
3 double
=
Py
3 double
=
Pz
3 double
=
DSet the cartesic coordinates of the 3D-part.
=
FsetValue
7 void
Svirtual
O#f4
Ppos
0 int
=
PvalueIn
3 double
=
DSet the <var>pos<sup>th</sup></var> component in cartesic coordinates to <var>valueIn</var>.
=
FgetDimension
0 int
Svirtual
O#f5
Lconst
DReturns the point's dimension which is 4.
=
FgetValue
3 double
Svirtual
O#f6
Lconst
Ppos
0 int
=
DReturns the <var>pos<sup>th</sup></var> component in cartesic coordinates.
=
FW
3 double
O#f7
Lconst
DReturns the w-component in cartesic coordinates.
=
FX
3 double
O#f8
Lconst
DReturns the x-component in cartesic coordinates.
=
FY
3 double
O#f9
Lconst
DReturns the y-component in cartesic coordinates.
=
FZ
3 double
O#f10
Lconst
DReturns the z-component in cartesic coordinates.
=
FPhi
3 double
O#f11
Lconst
DReturns the phi-component of the 3D-part in eigther polar or spheric coordinates, angle of the point vector projected to x-y-plane to the x-axis.
=
FTheta
3 double
O#f12
Lconst
DReturns the theta-component of the 3D-part in spheric coordinates, angle of the point vector to the z-axis.
=
FRho
3 double
O#f13
Lconst
DReturns the rho-component of the 3D-part in cylindric coordinates, length of the point vector projected on the x-y-plane.
=
FR
3 double
O#f14
Lconst
DReturns the r-component of the 3D-part in spheric coordinates, distance to the origin.
=
Fw
3 double
O#f15
Lconst
DReturns the w-component in cartesic coordinates.
=
Fx
3 double
O#f16
Lconst
DReturns the x-component in cartesic coordinates.
=
Fy
3 double
O#f17
Lconst
DReturns the y-component in cartesic coordinates.
=
Fz
3 double
O#f18
Lconst
DReturns the z-component in cartesic coordinates.
=
Fphi
3 double
O#f19
Lconst
DReturns the phi-component of the 3D-part in eigther polar or spheric coordinates, angle of the point vector projected to x-y-plane to the x-axis.
=
Ftheta
3 double
O#f20
Lconst
DReturns the theta-component of the 3D-part in spheric coordinates, angle of the point vector to the z-axis.
=
Frho
3 double
O#f21
Lconst
DReturns the rho-component of the 3D-part in cylindric coordinates, length of the point vector projected on the x-y-plane.
=
Fr
3 double
O#f22
Lconst
DReturns the r-component of the 3D-part in spheric coordinates, distance to the origin.
=
FgetRep
-1 rep3D
O#f23
Lconst
DReturns the representation of the 3D-part.
=
FsetRep
7 void
O#f24
Pr
-1 rep3D
=
DSet the representation of the 3D-part.
=
Foperator=
7 void
O#f25
Pp
12 point&
Sconst
Tpoint.html
=
DCopy operator. Works only if the dimension of the point is 4.
=
Foperator=
7 void
O#f26
Pp
16 point3D&
Sconst
Tpoint3d.html
=
DCopy operator. Sets the 3D-part.
=
Foperator=
7 void
O#f27
Pp
18 point4D&
Sconst
Tpoint4d.html
=
DCopy operator.
=
Foperator==
0 int
O#f28
Pp
18 point4D&
Sconst
Tpoint4d.html
=
DComparison operator. Returns true if the distance between the points is less than __prec (1e-6).
=
Foperator[]
3 double
Svirtual
O#f29
Lconst
Ppos
0 int
=
DAccess operator. Returns the <var>pos<sup>th</sup></var> component in cartesic coordinates.
=
FtoString
-1 string
Svirtual
O#f30
Lconst
Ppt
0 int
V-1
=
DReturns a string representation of the point. Depending on <var>pt</var> this can be eigther _cartesic3_, _cylindric_, _spheric_ or in the points own representation (<var>pt</var>=-1, default) for the 3D-part, the w-component is added.
=
DPoint in 3+1-dimensional space.
S0 1 point
point.html
point
=
