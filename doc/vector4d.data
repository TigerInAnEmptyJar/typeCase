vector4D
vector4d.html
/users/data12/pion/ehrhardt/tofPack2/include/geometry.h
Cvector4D
19 vector4D
O#c2
DDefault constructor.
=
Cvector4D
19 vector4D
O#c3
Pp
12 point&
Sconst
Tpoint.html
=
DCopy constructor. Sets a point vector from the origin to point <var>p</var>. Works only if <var>p</var> is 4-dimensional.
=
Cvector4D
19 vector4D
O#c4
Pp
16 point3D&
Sconst
Tpoint3d.html
=
DCopy constructor. Sets a point vector from the origin to point <var>p</var> for the 3D-part.
=
Cvector4D
19 vector4D
O#c5
Pp
18 point4D&
Sconst
Tpoint4d.html
=
DCopy constructor. Sets a point vector from the origin to point <var>p</var>.
=
Cvector4D
19 vector4D
O#c6
Pv
13 Vector&
Sconst
Tvector.html
=
DCopy constructor. Works only if <var>v</var> is 4-dimensional.
=
Cvector4D
19 vector4D
O#c7
Pv
17 vector3D&
Sconst
Tvector3d.html
=
DCopy constructor. Sets the 3D-part.
=
Cvector4D
19 vector4D
O#c8
Pv
19 vector4D&
Sconst
Tvector4d.html
=
DCopy constructor.
=
Cvector4D
19 vector4D
O#c9
Px
3 double
=
Py
3 double
=
Pz
3 double
=
DConstructor. Sets the cartesic components of the 3D-part.
=
Cvector4D
19 vector4D
O#c10
Px
3 double
=
Py
3 double
=
Pz
3 double
=
Pw
3 double
=
DConstructor. Sets the cartesic components.
=
FsetValues
7 void
Svirtual
O#f2
Px
3 double
=
Py
3 double
=
Pz
3 double
=
Pw
3 double
=
DSet the cartesic components.
=
FsetValues
7 void
Svirtual
O#f3
Px
3 double
=
Py
3 double
=
Pz
3 double
=
DSet the cartesic components of the 3D-part.
=
FsetValue
7 void
Svirtual
O#f4
Ppos
0 int
=
PvalueIn
3 double
=
DSet the <var>pos<sup>th</sup></var> component in cartesic coordinates to <var>valueIn</var>.
=
FgetValue
3 double
Svirtual
O#f5
Lconst
Ppos
0 int
=
DReturns the <var>pos<sup>th</sup></var> component in cartesic coordinates.
=
FgetState
-1 geomState
Svirtual
O#f6
Lconst
DReturns the state of the geometrical object. This can be _regular_, _undefined_, _infinite_ or _zero_. 
=
FgetDimension
0 int
Svirtual
O#f7
Lconst
DReturns the vector's dimension which s 4.
=
Fnormalize
7 void
Svirtual
O#f8
DSets the length of the vector to 1.
=
Flength
3 double
Svirtual
O#f9
Lconst
DReturns the length of the vector.
=
Foperator=
7 void
O#f10
Pp
12 point&
Sconst
Tpoint.html
=
DCopy operator. Works only if the dimension of <var>p</var> is 4. Sets a point vector from the origin to point <var>p</var>.
=
Foperator=
7 void
O#f11
Pv
13 Vector&
Sconst
Tvector.html
=
DCopy operator. Works only if the dimension of <var>v</var> is 4
=
Foperator=
7 void
O#f12
Pp
18 point4D&
Sconst
Tpoint4d.html
=
DCopy operator. Sets a point vector from the origin to point <var>p</var>.
=
Foperator=
7 void
O#f13
Pv
19 vector4D&
Sconst
Tvector4d.html
=
DCopy operator.
=
Foperator=
7 void
O#f14
Pp
16 point3D&
Sconst
Tpoint3d.html
=
DCopy operator. Sets the 3D-part. Sets a point vector from the origin to point <var>p</var>.
=
Foperator=
7 void
O#f15
Pv
17 vector3D&
Sconst
Tvector3d.html
=
DCopy operator. Sets the 3D-part.
=
Foperator==
0 int
O#f16
Lconst
Pv
19 vector4D&
Sconst
Tvector4d.html
=
DComparison operator. Returns true if the difference between the vectors is less than __prec (1e-6).
=
Foperator!
19 vector4D
O#f17
Tvector4d.html
Lconst
DTransposes the vector and returns the result. A line vector returns a column vector, a column vector a line vector. This vector remains unchanged.
=
Foperator[]
3 double
Svirtual
O#f18
Lconst
Ppos
0 int
=
DAccess operator. Returns the <var>pos<sup>th</sup></var> component in cartesic coordinates.
=
FtoString
-1 string
Svirtual
O#f19
Lconst
Ppt
0 int
V-1
=
DReturns a string representation of the vector. Depending on <var>pt</var> this can be eigther _cartesic3_, _cylindric_, _spheric_ or in the vector's own representation (<var>pt</var>=-1, default) for the 3D-part. The w-component is added.
=
fZero
7 void
Svirtual
O#f20
DSets the state of the objet to _zero_. 
=
fInfinite
7 void
Svirtual
O#f21
DSets the state of the objet to _infinite_. 
=
fUndefined
7 void
Svirtual
O#f22
DSets the state of the objet to _undefined_. 
=
fRegular
7 void
Svirtual
O#f23
DSets the state of the objet to _regular_. 
=
DVector in 3+1-dimensional space.
S0 1 point4D
point4d.html
point4D
S0 1 Vector
vector.html
Vector
=
