cylinder
cylinder.html
/users/data12/pion/ehrhardt/tofPack2/include/cylinder.h
Ccylinder
-1 cylinder
O#c2
Pc
16 point3D
Vpoint3D(0,0,0)
=
Pd
17 vector3D
Vvector3D(0,1,0)
=
Pv
1 float
V5
=
DConstructor. Creates a cylinder with center point <var>c</var>, direction vector <var>d</var> and radius <var>v</var>. 
=
Ccylinder
-1 cylinder
O#c3
Ps
151 volumeShape&
Sconst
=
DCopy constructor. Works only if the shape <var>s</var> is a cylinder, spiral or wedge.  
=
Ccylinder
-1 cylinder
O#c4
Pdescription
129 shape_parameter&
Sconst
=
DConstructor. Creates a cylinder as defined in the parameter.
=
vdirection
17 vector3D
O#v2
DDirection from the center point to one of the circle like end shapes. 
=
vradius
1 float
O#v3
DRadius of the cylinder. 
=
F~cylinder
-1 virtual
O#f2
DDestructor 
=
FgetDirection
17 vector3D
Svirtual
O#f3
Lconst
Pnum
0 int
V0
=
DReturns the direction vector from the center to the middle of one of the circle-surfaces. 
=
FgetLine
22 lLine3D
Svirtual
O#f4
Lconst
DReturns the middle line of the cylinder. 
=
FgetRadius
1 float
O#f5
Lconst
DReturns the radius of the cylinder. 
=
FsetLine
7 void
O#f6
Pl
22 lLine3D&
Sconst
=
DSets the middle line of the cylinder. 
=
FsetLine
7 void
O#f7
Pp
16 point3D
=
Pq
16 point3D
=
DSets the two end points of the cylinder. 
=
FsetLine
7 void
O#f8
Pc
16 point3D
=
Pd
17 vector3D
=
DSets the center point and the direction of the middle line of the cylinder. 
=
FsetRadius
7 void
O#f9
Pr
1 float
=
DSets the radius of the cylinder. 
=
FgetNext
151 volumeShape*
Svirtual
O#f10
Ptimes
0 int
=
PstackType
0 int
=
DReturns a new volume shape, that is shifted, rotated, shrunk, enlarged, or else modified according to the parameter <var>stackType</var>, generating the <var>times<sup>th</sup></var> element in the stack.   
DTake care, that you delete this shape correctly after use (potential memory leak).   
=
FgetEnvelope
151 volumeShape*
Svirtual
O#f11
PstackType
0 int
=
DReturns a volume that envelopes all <var>n</var> shapes generated with stacking type <var>stackType</var>. Take care, that you delete this shape correctly after use (potential memory leak).   
=
Fdistance
17 vector3D
Svirtual
O#f12
Pl
21 sLine3D&
Sconst
=
DReturns the distance vector from the straight line to the shape.   
=
FNormal
21 sLine3D
Svirtual
O#f13
Pline
21 sLine3D&
Sconst
=
DReturns the hit point of a straigt line with the shape and normal vector of the shape in that point. This is stored in the straight line return value with the Foot-property being the hit point and the Direction-property the normal vector.   
=
Fcut
6 bool
Svirtual
O#f14
Pf
-1 fiber&
Sconst
=
DReturns true, if the cylinder and the fiber occupy some space commonly.   
=
Foperator=
7 void
Svirtual
O#f15
Ps
151 volumeShape&
Sconst
=
DCopy operator. 
=
FgetClone
151 volumeShape*
Svirtual
O#f16
DCreates a new instance of the same cylinder with the same properties. Take care, that you delete this shape correctly after use (potential memory leak).   
=
FHitParams
13 Vector
Svirtual
O#f17
Pline
21 sLine3D&
Sconst
=
DReturns the parameters for a hit of a straight line with the shape. The pattern will be:     
D*  
Dindex of returndescription   
D0sigma value   
D1,2,3entrance point of line/point on line closest to the volume   
D4,5,6resolution vector   
D7,8,9point on volume closest to the line   
D10,11,12minimum distance of line to volume, points to volume   
D</table>     
DReturns the parameters for a hit of a straight line with the shape. The pattern will be:   
D<table> 
D<tr><th>index of return<th>description   
D<tr><td>0<td>sigma value   
D<tr><td>1,2,3<td>entrance point of line/point on line closest to the volume   
D<tr><td>4,5,6<td>resolution vector   
D<tr><td>7,8,9<td>point on volume closest to the line   
D<tr><td>10,11,12<td>minimum distance of line to volume, points to volume   
D</table>   
=
FHitParams
13 Vector
Svirtual
O#f18
Pshape
152 planeShape&
Sconst
=
Porigin
16 point3D
=
DReturns the parameters for a hit of a pyramid like shape with the tip at <var>origin</var> and the <var>shape</var> as base with the shape. The pattern will be:      
D<table> 
D<tr><th>index of return<th>description    
D<tr><td>0<td>sigma value    
D<tr><td>1,2,3<td>entrance point of line/point on line closest to the volume    
D<tr><td>4,5,6<td>resolution vector    
D<tr><td>7,8,9<td>point on volume closest to the line    
D<tr><td>10,11,12<td>minimum distance of line to volume, points to volume    
D</table>      
=
Fentrance
16 point3D
Svirtual
O#f19
Pline
21 sLine3D&
Sconst
=
DReturns the entrance point of the straight line into the shape. This point is undefined if the line does not hit the shape.  
=
FHitting
13 Vector
Svirtual
O#f20
Pline
21 sLine3D&
Sconst
=
DCalculates all characteristics of a hit of a straight line with the volume shape. The return values components will be:   
D<table> 
D<tr><th>index <th>value   
D<tr><td>0, 1, 2 <td>entrance point of line   
D<tr><td>3, 4, 5 <td>distance of line to volume, points to volume   
D<tr><td>6, 7, 8 <td>normal vector to volume in entrance point   
D<tr><td>9 <td>sigma value   
D</table>   
=
FDraw
7 void
Svirtual
O#f21
Lconst
Peye
16 point3D&
Sconst
=
Pplane
23 plane3D&
Sconst
=
PboundingBox
19 vector4D*
=
PlColor
0 int
=
PfColor
0 int
V8
=
PfStyle
0 int
V1001
=
DThis function is used for drawing a shape to a root-TCanvas.    
DIt will draw a projection of the 3D shape from the <var>eye</var>-point to a <var>plane</var>. The corners of the drawn shape in canvas coordinates are stored in <var>boundingBox</var>. It is drawn using <var>lColor</var> as line color, <var>fColor</var> as fill color and <var>fStyle</var> as fill style. See <a href="http://root.cern.ch/root/html/TAttFill.html"> root-colors and -styles</a>.    
=
FDraw
7 void
Svirtual
O#f22
Lconst
Peye
16 point3D&
Sconst
Vpoint3D(0,0,0)
=
Pplane
23 plane3D&
Sconst
Vplane3D(point3D(0,0,1),vector3D(0,0,1))
=
PboundingBox
19 vector4D*
VNULL
=
Pident
-1 TObject**
VNULL
=
PlColor
0 int
V1
=
PfColor
0 int
V8
=
PfStyle
0 int
V1001
=
DThis function is used for drawing a shape to a root-TCanvas.    
DIt will draw a projection of the 3D shape from the <var>eye</var>-point to a <var>plane</var>. The corners of the drawn shape in canvas coordinates are stored in <var>boundingBox</var>.    
DIt is drawn using <var>lColor</var> as line color, <var>fColor</var> as fill color and <var>fStyle</var> as fill style. See <a href="http://root.cern.ch/root/html/TAttFill.html"> root-colors and -styles</a>.    
DThe parameter <var>ident</var> will return a pointer to the drawn root-primitive to provide the distance-to-primitive functionality.   
=
Fdescription
129 shape_parameter
Svirtual
O#f23
Lconst
DReturns a parameter describing this cylinder.
=
FgetDescription
129 shape_parameter
Sstatic
O#f24
DStatic method. Returns a parameter with all necessary default variables to create a cylinder. 
=
S0 1 volumeShape
volumeshape.html
volumeShape
=
