run_parameter
runparameter.html
/users/data12/pion/ehrhardt/tofPack2/include/beamtimeparameter.h
Crun_parameter
126 run_parameter
O#c2
Pparent
125 beamTime_parameter&
=
Ppn
0 int
=
DConstructor. Sets the parent beam-time and the beam-time number. 
=
Crun_parameter
126 run_parameter
O#c3
Pr
126 run_parameter&
Sconst
=
DCopy constructor. 
=
Crun_parameter
126 run_parameter
O#c4
Pn
-1 string
Vstring()
=
DDefault constructor. Sets the name of the run. 
=
gtype
0 int
O#v2
D 
=
gparent
0 int
O#v3
D 
=
gsetup
6 bool
O#v4
D 
=
gcalib
6 bool
O#v5
D 
=
gaddiC
6 bool
O#v6
D
=
genabeles
-1 vector<vector<bool> >
O#v7
D 
=
grunNumber
0 int
O#v8
D 
=
gpar
125 beamTime_parameter*
O#v9
D 
=
gfiles
-1 vector<string>
O#v10
D 
=
gfileTypes
-1 vector<int>
O#v11
D 
=
gevents
-1 vector<long>
O#v12
D  
=
gstartingTime
-1 QDateTime
O#v13
D
=
gstopingTime
-1 QDateTime
O#v14
D
=
gstartingTime
-1 tm
O#v15
D
=
gstopingTime
-1 tm
O#v16
D
=
F~run_parameter
-1 virtual
O#f2
DDestructor 
=
FgetType
0 int
O#f3
Lconst
DReturns the run type. A run can be a regular data run or a variety of calibration runs, or else. 
=
FsetType
7 void
O#f4
Pt
0 int
=
DSets the run type. A run can be a regular data run or a variety of calibration runs, or else. 
=
FgetParentNumber
0 int
O#f5
Lconst
DReturns the parenting beam-times number. 
=
FsetParentNumber
7 void
O#f6
Pp
0 int
=
DSets the parenting beam-times number. 
=
FgetParent
125 beamTime_parameter*
O#f7
Lconst
DReturns a pointer to the parenting beam-time. 
=
FsetParent
7 void
O#f8
Pp
125 beamTime_parameter*
=
DSets the pointer to the parenting beam-time. 
=
FhasOwnSetup
6 bool
O#f9
Lconst
DReturns true if there is an own detector setup file is defined for this run. Use the setup file of the parenting beam-time else. 
=
FsetOwnSetup
7 void
O#f10
Ps
6 bool
Vtrue
=
DSets if there is an own detector setup file defined for this run. Use the setup file of the parenting beam-time else. 
=
FhasOwnCalibration
6 bool
O#f11
Lconst
DReturns true if there are own calibration files used for this run. If it is false, use the calibration files of the parenting beamtime. 
=
FsetOwnCalibration
7 void
O#f12
Pc
6 bool
Vtrue
=
DSets if there is an own calibration defined for this run. Use the calibration of the parenting beamtime else. 
=
FhasAdditionalCalibration
6 bool
O#f13
Lconst
DReturns true if additionally to the parenting beam-times calibration file the own ones shall be used.
=
FsetAdditionalCalibration
7 void
O#f14
Pc
6 bool
Vtrue
=
DSet wether additionally to the calibration files the parenting beam-time provides, the own calibration files shall be used.
=
FaddDetectorCalibration
7 void
Svirtual
O#f15
Pfn
-1 vector<string>
Vvector<string>()
=
D<i>obsolete</i> 
DAdds a detector for calibration along with the files. 
=
FpopDetectorCalibration
7 void
Svirtual
O#f16
D<i>obsolete</i> 
DRemoves the last calibration detector. 
=
FaddTypCalibration
7 void
Svirtual
O#f17
Pfn
-1 vector<string>
Vvector<string>()
=
D<i>obsolete</i> 
DAdds a calibration type. 
=
FpopTypCalibration
7 void
Svirtual
O#f18
D<i>obsolete</i> 
DRemoves the last calibration type. 
=
FuseOwn
6 bool
O#f19
Lconst
Pd
0 int
=
Pt
0 int
=
Dobsolete  
DReturns true if the calibration type <var>t</var> for detector <var>d</var> is defined separately for this run.  
=
FsetUseOwn
7 void
O#f20
Pd
0 int
=
Pt
0 int
=
Pus
6 bool
Vtrue
=
Dobsolete  
DSets if the calibration type <var>t</var> for detector <var>d</var> is used separately for this run.  
=
FgetRunNumber
0 int
O#f21
Lconst
DReturns the run number. 
=
FsetRunNumber
7 void
O#f22
Prn
0 int
=
DSets the run number. 
=
FaddFile
7 void
O#f23
Pfilename
-1 string
=
Ptype
0 int
=
PfileEvents
2 long
V-1
=
DAdds a file of type <var>type</var> to the list of files.  
DAs file types there are actually available:    
D0: for tade files.    
D2: for root files:     
D4: for hit files    
D8: for pixel files    
D16: for cluster files    
D32: for track files    
D64: for reaction files    
DYou may add these bits if you have e.g. a root hit file you'll have file type 6.    
=
FclearFiles
7 void
O#f24
DEmpties the list of files. 
=
FgetNumberOfFiles
0 int
O#f25
Lconst
DReturns the number of files. 
=
FgetFile
-1 string
O#f26
Lconst
Pnum
0 int
=
DReturns the <var>num<sup>th</sup></var> file or an empty string if <var>num</var> is non valid.  
=
FgetFileType
0 int
O#f27
Lconst
Pnum
0 int
=
DReturns the file type of file <var>num</var>.  
DAs file types there are actually available:   
D0: for tade files.   
D2: for root files:    
D4: for hit files   
D8: for pixel files   
D16: for cluster files   
D32: for track files   
D64: for reaction files   
DYou may add these bits if you have e.g. a root hit file you'll have file type 6.   
=
FsetFileType
7 void
O#f28
Pnum
0 int
=
Ptype
0 int
=
DSets the file-type for file <var>num</var>. ?As file types there are actually available: ?0: for tade files. ?2: for root files:  
D4: for hit files 
D8: for pixel files 
D16: for cluster files 
D32: for track files 
D64: for reaction files 
DYou may add these bits if you have e.g. a root hit file you'll have file type 6. 
=
FgetFileEvents
2 long
O#f29
Lconst
Pnum
0 int
=
DReturns the number of events stored in the <var>num<sup>th</sup></var> file. This number might be incorrect, since there is no cross-check. 
=
FsetFileEvents
7 void
O#f30
Pnum
0 int
=
PfileEvents
2 long
=
DSets the number of events in file <var>num</var>. This number is not cross checked. 
=
FsetStartTime
7 void
O#f31
Pyear
0 int
=
Pmonth
0 int
=
Pday
0 int
=
Phour
0 int
=
Pminute
0 int
=
Psecond
0 int
=
DSets the start time of the run.
=
FsetStopTime
7 void
O#f32
Pyear
0 int
=
Pmonth
0 int
=
Pday
0 int
=
Phour
0 int
=
Pminute
0 int
=
Psecond
0 int
=
DSets the stop time of the run.
=
FsetStartTime
7 void
O#f33
Ptime
-1 QDateTime&
Sconst
=
DSets the start time of the run.
=
FsetStopTime
7 void
O#f34
Ptime
-1 QDateTime&
Sconst
=
DSets the stop time of the run.
=
FgetStartTime
-1 QDateTime
O#f35
Lconst
DReturns the start time of the run (see standard header file "time.h").
=
FgetStopTime
-1 QDateTime
O#f36
Lconst
DReturns the stop time of the run (see standard header file "time.h").
=
FsetStartTime
7 void
O#f37
Ptime
-1 tm&
Sconst
=
DSets the start time of the run.
=
FsetStopTime
7 void
O#f38
Ptime
-1 tm&
Sconst
=
DSets the stop time of the run.
=
FgetStartTime
-1 tm
O#f39
Lconst
D
=
FgetStopTime
-1 tm
O#f40
Lconst
D
=
FgetTime
0 int
O#f41
Lconst
DReturns the total time of the run in seconds.
=
Foperator=
7 void
O#f42
Pr
126 run_parameter&
Sconst
=
DCopy operator. 
=
S0 1 beamTime_parameter
beamtimeparameter.html
beamTime_parameter
=
