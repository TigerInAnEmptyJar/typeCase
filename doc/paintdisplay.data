PaintDisplay
paintdisplay.html
$(KTOFPACK)/gui/parameter_widgets/include/paintdisplay.h
CPaintDisplay
-1 PaintDisplay
O#c2
Pparent
-1 QWidget*
Thttp://doc.trolltech.com/4.4/qwidget.html
V0
=
Pname
5 char*
Sconst
V0
=
Pfl
-1 WFlags
V0
=
DConstructor. Qt3 version, non-visible in Qt4 mode.
=
CPaintDisplay
-1 PaintDisplay
O#c3
Pparent
-1 QWidget*
Thttp://doc.trolltech.com/4.4/qwidget.html
V0
=
Pf
-1 Qt::WindowFlags
V0
=
DConstructor. Qt4 version, not visible in Qt3-mode.
=
VnameLabel
-1 QLabel*
O#v2
D
=
VnameInput
-1 QLineEdit*
O#v3
Thttp://doc.trolltech.com/4.4/qlineedit.html
D
=
VidLabel
-1 QLabel*
O#v4
D
=
VidInput
-1 QLineEdit*
O#v5
Thttp://doc.trolltech.com/4.4/qlineedit.html
D
=
VmarkerLabel
-1 QLabel*
O#v6
D
=
VmarkerInput
-1 QComboBox*
O#v7
D
=
VcolorInput
-1 ColorButton*
O#v8
Tcolorbutton.html
D
=
VdoPaint
-1 QCheckBox*
O#v9
D
=
vsp
131 paint_parameter*
O#v10
Tpaintparameter.html
Dpointer to the current paint_parameter; this is modified if display is not read-only
=
vReadOnly
6 bool
O#v11
Dread-only enabled
=
vcopy
131 paint_parameter
O#v12
Tpaintparameter.html
Da copy of the current paint_parameter
=
vmarkerNames
-1 vector<string>
O#v13
Dnames of the marker-types
=
vmarkerIcons
-1 vector<QPixmap*>
O#v14
Dimages for the marker-types
=
vlayout
-1 QGridLayout*
O#v15
Dlayout to align widgets
=
FclassName
5 char*
Svirtual const
O#f2
DThe className() function that returns the class name as a string at runtime, 
Dwithout requiring native runtime type information (RTTI) support through the C++ compiler.
=
Finherrits
6 bool
Sconst
O#f3
Pclname
5 char*
Sconst
=
Dthe inherits() function that returns whether an object is an instance of a class 
Dthat inherits a specified class within the QObject inheritance tree. 
=
Ftr
-1 QString
Sstatic
O#f4
Thttp://doc.trolltech.com/4.4/qstring.html
PsourceText
5 char*
Sconst
=
Pcomment
5 char*
Sconst
=
DReturns a translated version of sourceText, or sourceText itself if there is no 
Dappropriate translated version. The translation context is QObject with comment 
D(0 by default). All QObject subclasses using the Q_OBJECT macro automatically have 
Da reimplementation of this function with the subclass name as context.
DWarning: This method is reentrant only if all translators are installed before calling 
Dthis method. Installing or removing translators while performing translations is not 
Dsupported. Doing so will probably result in crashes or other undesirable behavior. 
=
FtrUtf8
-1 QString
Sstatic
O#f5
Thttp://doc.trolltech.com/4.4/qstring.html
PsourceText
5 char*
Sconst
=
Pcomment
5 char*
Sconst
=
DReturns a translated version of sourceText, or QString::fromUtf8(sourceText) if there 
Dis no appropriate version. It is otherwise identical to tr(sourceText, comment). 
DWarning: This method is reentrant only if all translators are installed before calling 
Dthis method. Installing or removing translators while performing translations is not 
Dsupported. Doing so will probably result in crashes or other undesirable behavior. 
=
FsetProperty
6 bool
Svirtual
O#f6
Pname
5 char*
Sconst
=
Pvalue
-1 QVariant&
Sconst
=
DSets the value of the object's name property to value.
DReturns TRUE if the operation was successful; otherwise returns FALSE. 
DInformation about all available properties is provided through the metaObject()
=
Fproperty
-1 QVariant
Svirtual
O#f7
Lconst
Pname
5 char*
Sconst
=
DReturns the value of the object's name property. 
DIf no such property exists, the returned variant is invalid. 
DInformation about all available properties are provided through the metaObject(). 
=
FmetaObject
-1 QMetaObject*
Svirtual
O#f8
Lconst
DReturns a pointer to the meta object of this object. 
DA meta object contains information about a class that inherits QObject, e.g. class name,
Dsuperclass name, properties, signals and slots. Every class that contains the 
DQ_OBJECT macro will also have a meta object. 
DThe meta object information is required by the signal/slot connection mechanism 
Dand the property system. The functions isA() and inherits() also make use of the meta object. 
=
FreadOnly
6 bool
Svirtual
O#f9
DReturns true if the display is in read-only-mode.
=
ginit
7 void
O#f10
DCalled by constructor.
=
gdestroy
7 void
O#f11
DFunction called by destructor.
=
Lresize
7 void
Svirtual
O#l2
Ps
-1 QSize&
Sconst
=
DResize widget.
=
LresizeEvent
7 void
Svirtual
O#l3
Pe
-1 QResizeEvent*
=
DResize event.
=
Lresize
7 void
Svirtual
O#l4
Pw
0 int
=
Ph
0 int
=
DResize the widget.
=
LsetPaint
7 void
Svirtual
O#l5
PpaintIn
131 paint_parameter&
Tpaintparameter.html
=
DSets the current paint_parameter. Take care that it is a non-local reference you pass here. A pointer to the variable will be saved. If read-only is true, the variable won't be modified, but the display may want to actualize the information.
=
LsetReadOnly
7 void
Svirtual
O#l6
Pvalue
6 bool
=
DSet the read-only property. If true, the original paint_parameter won't be modified.
=
LsetMarker
7 void
Svirtual
O#l7
PnamesIn
-1 vector<string>
=
DSets the marker-type names.
=
LsetMarker
7 void
Svirtual
O#l8
PiconsIn
-1 vector<QPixmap*>
=
DSet the marker-type images.
=
LonPropertyChange
7 void
Svirtual
O#l9
DReread the properties of the paint_parameter out of the pointer to the current paint_parameter.
=
LonPaintClick
7 void
Svirtual
O#l10
DSets the doPaint-property of the current paint_parameter, if read-only is false.
=
LonMarkerClick
7 void
Svirtual
O#l11
DCopy the selected marker-type to the pointer of the current paint_parameter (if not read-only).
=
LonColorSelected
7 void
Svirtual
O#l12
Pcolor
0 int
=
DSets the color of the paint_parameter.
=
llanguageChange
7 void
Svirtual
O#l13
DSets the labels on the widgets.
=
Nchanged
7 void
O#s2
DIf not read-only, this signal is emitted whenever some displayed value has been modified.
=
D<table><tr><td>This class shows the properties of a single <a href="paintparameter.html">paint_parameter</a>. </td><td><img src="pictures/view.jpg" width=250></td></tr> </table>
S0 0 QWidget

=
