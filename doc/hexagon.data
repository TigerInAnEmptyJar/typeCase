hexagon
hexagon.html
/users/data12/pion/ehrhardt/tofPack2/include/planeShape.h
Chexagon
-1 hexagon
O#c2
Pcen
16 point3D
Vpoint3D()
=
Pa
16 point3D
Vpoint3D()
=
Pnorm
17 vector3D
Vpoint3D()
=
DConstructor. Sets the points, the center and the normal. 
=
Chexagon
-1 hexagon
O#c3
Ps
152 planeShape&
Sconst
=
DCopy constructor. Copies center and normal. If <var>s</var> is a hexagon it also copies the point. 
=
Chexagon
-1 hexagon
O#c4
Pdescription
129 shape_parameter&
Sconst
=
DConstructor. Creates a hexagon out of the values in the parameter.
=
vA_
16 point3D
O#v2
Done of the corners of the hexagon
=
F~hexagon
-1 virtual
O#f2
DDestructor 
=
FgetNumberOfPoints
0 int
Svirtual
O#f3
Lconst
DReturns the number of points of the hexagon: 6. 
=
FgetPoint
16 point3D
Svirtual
O#f4
Lconst
Pnum
0 int
=
DReturns the <var>num<sup>th</sup></var> point of the hexagon. 
=
FsetA
7 void
O#f5
Pp
16 point3D
=
DSets the point A. The other points are generated by rotation of the point <var>A</var> around the axis center-norm by PI/3.  
=
FsetPoints
7 void
O#f6
Pcen
16 point3D
=
Pa
16 point3D
=
Pnorm
17 vector3D
=
DSets the points of the hexagon. The other points are generated by rotation of the point <var>a</var> around the axis center-norm by PI/3. 
=
FA
16 point3D
O#f7
Lconst
DReturns point A of the hexagon. 
=
FB
16 point3D
O#f8
Lconst
DReturns point B of the hexagon. 
=
FC
16 point3D
O#f9
Lconst
DReturns point C of the hexagon. 
=
FD
16 point3D
O#f10
Lconst
DReturns point D of the hexagon. 
=
FE
16 point3D
O#f11
Lconst
DReturns point E of the hexagon. 
=
FF
16 point3D
O#f12
Lconst
DReturns point F of the hexagon. 
=
Farea
1 float
Svirtual
O#f13
Lconst
DReturns the area of the hexagon. 
=
FangularRange_Phi
1 float
Svirtual
O#f14
Lconst
Porigin
16 point3D&
Sconst
Vpoint3D(0,0,0)
=
PzDirection
17 vector3D&
Sconst
Vvector3D(0,0,1)
=
DReturns the polar angular range of a hexagon, for any z direction and origin.  
=
FangularRange_Theta
1 float
Svirtual
O#f15
Lconst
Porigin
16 point3D&
Sconst
Vpoint3D(0,0,0)
=
PzDirection
17 vector3D&
Sconst
Vvector3D(0,0,1)
=
DReturns the azimuthal angular range of a hexagon, for any z direction and origin.  
=
FdistancePlane
17 vector3D
Svirtual
O#f16
Pp
23 plane3D&
Sconst
=
DReturns the distance vector for a plane to the hexagon. 
=
Fdistance
17 vector3D
Svirtual
O#f17
Pline
21 sLine3D&
Sconst
=
D Returns the distance from a line to the hexagon. 
=
FAB
22 lLine3D
O#f18
Lconst
DReturns the edge between point A and B. 
=
FBC
22 lLine3D
O#f19
Lconst
DReturns the edge between point B and C. 
=
FCD
22 lLine3D
O#f20
Lconst
DReturns the edge between point C and D. 
=
FDE
22 lLine3D
O#f21
Lconst
DReturns the edge between point D and E. 
=
FEF
22 lLine3D
O#f22
Lconst
DReturns the edge between point E and F. 
=
FFA
22 lLine3D
O#f23
Lconst
DReturns the edge between point F and A. 
=
Foperator=
7 void
O#f24
Ph
-1 hexagon&
Sconst
=
DCopy operator. 
=
FDraw
7 void
Svirtual
O#f25
Lconst
Peye
16 point3D&
Sconst
=
Pplane
23 plane3D&
Sconst
=
PboundingBox
19 vector4D*
=
PlColor
0 int
=
PfColor
0 int
V8
=
PfStyle
0 int
V1001
=
DThis function is used for drawing a shape to a root-TCanvas.    
DIt will draw a projection of the 3D shape from the <var>eye</var>-point to a <var>plane</var>. The corners of the drawn shape in canvas coordinates are stored in <var>boundingBox</var>.    
DIt is drawn using <var>lColor</var> as line color, <var>fColor</var> as fill color and <var>fStyle</var> as fill style. See <a href="http://root.cern.ch/root/html/TAttFill.html"> root-colors and -styles</a>. 
=
FDraw
7 void
Svirtual
O#f26
Lconst
Peye
16 point3D&
Sconst
Vpoint3D(0,0,0)
=
Pplane
23 plane3D&
Sconst
Vplane3D(point3D(0,0,1),vector3D(0,0,1))
=
PboundingBox
19 vector4D*
VNULL
=
Pident
-1 TObject**
VNULL
=
PlColor
0 int
V1
=
PfColor
0 int
V8
=
PfStyle
0 int
V1001
=
DThis function is used for drawing a shape to a root-TCanvas.    
DIt will draw a projection of the 3D shape from the <var>eye</var>-point to a <var>plane</var>. The corners of the drawn shape in canvas coordinates are stored in <var>boundingBox</var>.    
DIt is drawn using <var>lColor</var> as line color, <var>fColor</var> as fill color and <var>fStyle</var> as fill style. See <a href="http://root.cern.ch/root/html/TAttFill.html"> root-colors and -styles</a>.    
DThe parameter <var>ident</var> will return a pointer to the drawn root-primitive to provide the distance-to-primitive functionality. 
=
Fdescription
129 shape_parameter
Svirtual
O#f27
Lconst
DReturns a description of this hexagon.
=
FgetDescription
129 shape_parameter
Sstatic
O#f28
DStatic Method. Returns a default description of a hexagon with all necessary variables defined.
=
S0 1 planeShape
planeshape.html
planeShape
=
