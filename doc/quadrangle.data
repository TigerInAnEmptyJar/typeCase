quadrangle
quadrangle.html
/users/data12/pion/ehrhardt/tofPack2/shapes/include/quadrangle.h
Cquadrangle
-1 quadrangle
O#c2
Pcent
16 point3D
Tpoint3d.html
Vpoint3D()
=
Pa
16 point3D
Tpoint3d.html
Vpoint3D()
=
Pb
16 point3D
Tpoint3d.html
Vpoint3D()
=
Pc
16 point3D
Tpoint3d.html
Vpoint3D()
=
Pd
16 point3D
Tpoint3d.html
Vpoint3D()
=
DConstructor. Creates a quadrangle with center <var>cent</var> and the four points <var>a</var>, <var>b</var>, <var>c</var> and <var>d</var>. The plane is fixed using center, <var>a</var> and <var>b</var>. The other points are projected to this plane.
=
Cquadrangle
-1 quadrangle
O#c3
Pdescription
129 shape_parameter&
Sconst
Tshapeparameter.html
=
DConstructor. Creates a quadrangle as described in the parameter.
=
gA_
16 point3D
O#v2
Tpoint3d.html
=
gB_
16 point3D
O#v3
Tpoint3d.html
=
gC_
16 point3D
O#v4
Tpoint3d.html
=
gD_
16 point3D
O#v5
Tpoint3d.html
=
F~quadrangle
-1 virtual
O#f2
DDestructor
=
FgetNumberOfPoints
0 int
Svirtual
O#f3
Lconst
DReturns the number of points which is four.
=
FgetPoint
16 point3D
Svirtual
O#f4
Tpoint3d.html
Lconst
Pnum
0 int
=
DReturns the <var>num<sup>th</sup></var> point of the shape.
=
Farea
1 float
Svirtual
O#f5
Lconst
DReturns the area of the shape.
=
FangularRange_Phi
1 float
Svirtual
O#f6
Lconst
Porigin
16 point3D&
Sconst
Tpoint3d.html
Vpoint3D(0,0,0)
=
PzDirection
17 vector3D&
Sconst
Tvector3d.html
Vvector3D(0,0,1)
=
DReturns the phi-angular-range viewn from <var>origin</var>.
=
FangularRange_Theta
1 float
Svirtual
O#f7
Lconst
Porigin
16 point3D&
Sconst
Tpoint3d.html
Vpoint3D(0,0,0)
=
PzDirection
17 vector3D&
Sconst
Tvector3d.html
Vvector3D(0,0,1)
=
DReturns the theta-angular range of the shape viewn from <var>origin</var>.
=
FdistancePlane
17 vector3D
Svirtual
O#f8
Tvector3d.html
Pp
23 plane3D&
Sconst
Tplane3d.html
=
DReturns the distance of the center of the shape to the plane.
=
Fdistance
17 vector3D
Svirtual
O#f9
Tvector3d.html
Pline
21 sLine3D&
Sconst
Tsline3d.html
=
DReturns the distance of the shape to the line.
=
FA
16 point3D
O#f10
Tpoint3d.html
Lconst
DReturns the first point of the quadrangle.
=
FB
16 point3D
O#f11
Tpoint3d.html
Lconst
DReturns the second point of the quadrangle.
=
FC
16 point3D
O#f12
Tpoint3d.html
Lconst
DReturns the third point of the quadrangle.
=
FD
16 point3D
O#f13
Tpoint3d.html
Lconst
DReturns the four<sup>th</sup> point of the quadrangle.
=
FsetA
7 void
O#f14
Pp
16 point3D
Tpoint3d.html
=
DSets the first point of the quadrangle.
=
FsetB
7 void
O#f15
Pp
16 point3D
Tpoint3d.html
=
DSets the second point of the quadrangle.
=
FsetC
7 void
O#f16
Pp
16 point3D
Tpoint3d.html
=
DSets the third point of the quadrangle.
=
FsetD
7 void
O#f17
Pp
16 point3D
Tpoint3d.html
=
DSets the four<sup>th</sup> point of the quadrangle.
=
FDraw
7 void
Svirtual
O#f18
Lconst
Peye
16 point3D&
Sconst
Tpoint3d.html
=
Pplane
23 plane3D&
Sconst
Tplane3d.html
=
PboundingBox
19 vector4D*
Tvector4d.html
=
PlColor
0 int
=
PfColor
0 int
V8
=
PfStyle
0 int
V1001
=
DProjects and draws the quadrangle using the root-Draw functions to a root-TCanvas.
DThe projection plane is <var>plane</var>, the eye-point is <var>eye</var>. You can provide line color, fill color and fill style. Supplying a suitable pointer for the bounding-box returns the size of the shape on the canvas.
=
FDraw
7 void
Svirtual
O#f19
Lconst
Peye
16 point3D&
Sconst
Tpoint3d.html
Vpoint3D(0,0,0)
=
Pplane
23 plane3D&
Sconst
Tplane3d.html
Vplane3D(point3D(0,0,1),vector3D(0,0,1))
=
PboundingBox
19 vector4D*
Tvector4d.html
VNULL
=
Pident
-1 TObject**
Ttobject.html
VNULL
=
PlColor
0 int
V1
=
PfColor
0 int
V8
=
PfStyle
0 int
V1001
=
DProjects and draws the quadrangle using the root-Draw functions to a root-TCanvas.
DThe projection plane is <var>plane</var>, the eye-point is <var>eye</var>. You can provide line color, fill color and fill style. Supplying a suitable pointer for the bounding-box returns the size of the shape on the canvas. Ident can hold a pointer to the TPolyLine that was drawn to canvas.
=
Fdescription
129 shape_parameter
Svirtual
O#f20
Tshapeparameter.html
Lconst
DReturns a description of this quadrangle.
=
FgetDescription
129 shape_parameter
Sstatic
O#f21
Tshapeparameter.html
DStatic method. Returns a default description of the quadrangle defining all necessary variables.
=
DThis class describes a shape with four corners within a plane without intersections.
S0 1 planeShape
planeshape.html
planeShape
=
